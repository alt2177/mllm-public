{"aEBRj5y7cp": [{"data": {"application/vnd.jupyter.widget-view+json": {"model_id": "19256383fa66477f8f54a6f8f73d3ea1", "version_major": 2, "version_minor": 0}, "text/plain": ["VBox(children=(HTML(value='<center> <img\\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.sv\u2026"]}, "metadata": {}, "output_type": "display_data"}], "E6oW6sorFO": [{"name": "stderr", "output_type": "stream", "text": [".local/lib/python3.11/site-packages/transformers/utils/hub.py:124: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.\n", "  warnings.warn(\n"]}], "118IHHKwsg": [], "S5zq9gqocM": [], "q1ytGGkN5p": [{"name": "stderr", "output_type": "stream", "text": ["2024-03-03 09:24:46.842820: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n", "2024-03-03 09:24:46.911119: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n", "To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n", "2024-03-03 09:24:49.243176: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n"]}], "ETRU2ImSgM": [], "1mEuTDI46L": [], "OSVKEq1N8j": [], "cUIeFI3wiy": [{"name": "stderr", "output_type": "stream", "text": ["Some weights of GPT2ForSequenceClassification were not initialized from the model checkpoint at openai-community/gpt2 and are newly initialized: ['score.weight']\n", "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]}, {"data": {"text/plain": ["Embedding(50257, 768)"]}, "execution_count": 9, "metadata": {}, "output_type": "execute_result"}], "hllTKn7jAt": [], "qyczHPanlV": [{"data": {"text/html": ["\n", "    <div>\n", "      \n", "      <progress value='37500' max='37500' style='width:300px; height:20px; vertical-align: middle;'></progress>\n", "      [37500/37500 3:00:43, Epoch 1/1]\n", "    </div>\n", "    <table border=\"1\" class=\"dataframe\">\n", "  <thead>\n", " <tr style=\"text-align: left;\">\n", "      <th>Epoch</th>\n", "      <th>Training Loss</th>\n", "      <th>Validation Loss</th>\n", "      <th>Accuracy</th>\n", "    </tr>\n", "  </thead>\n", "  <tbody>\n", "    <tr>\n", "      <td>1</td>\n", "      <td>0.755900</td>\n", "      <td>0.732290</td>\n", "      <td>0.683240</td>\n", "    </tr>\n", "  </tbody>\n", "</table><p>"], "text/plain": ["<IPython.core.display.HTML object>"]}, "metadata": {}, "output_type": "display_data"}, {"data": {"text/plain": ["TrainOutput(global_step=37500, training_loss=0.7917611702473958, metrics={'train_runtime': 10844.0103, 'train_samples_per_second': 27.665, 'train_steps_per_second': 3.458, 'total_flos': 6.859314912503808e+16, 'train_loss': 0.7917611702473958, 'epoch': 1.0})"]}, "execution_count": 11, "metadata": {}, "output_type": "execute_result"}], "E1omsgmmDg": [{"data": {"text/html": ["\n", "    <div>\n", "      \n", "      <progress value='391' max='391' style='width:300px; height:20px; vertical-align: middle;'></progress>\n", "      [391/391 05:19]\n", "    </div>\n", "    "], "text/plain": ["<IPython.core.display.HTML object>"]}, "metadata": {}, "output_type": "display_data"}], "BQDDXeGDyu": [{"name": "stdout", "output_type": "stream", "text": ["Fine tune model accuracy : 0.93692\n"]}]}